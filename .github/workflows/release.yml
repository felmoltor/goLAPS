# Release a new golang binary for windows and linux when I push to main
name: release-when-push-to-main
run-name: Release when push to main
on:
  push:
    tags:
      - v*
jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, windows, darwin]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.22
      
      - name: Build for ${{ matrix.os }}
        run: |
          if [ ${{ matrix.os }} == 'darwin' ]; then
            GOOS=${{ matrix.os }} GOARCH=arm64 go build -o bin/golaps-${{ github.ref_name }}-${{ matrix.os }}-arm64 src/*.go
          else
            GOOS=${{ matrix.os }} GOARCH=amd64 go build -o bin/golaps-${{ github.ref_name }}-${{ matrix.os }}-amd64 src/*.go
          fi

      - name: Upload windows and linux artifact
        uses: actions/upload-artifact@v2
        with:
          name: golaps-${{ github.ref_name }}-${{ matrix.os }}-amd64
          path: bin/golaps-${{ github.ref_name }}-${{ matrix.os }}-amd64

      - name: Upload Macos artifact
        uses: actions/upload-artifact@v2
        with:
          name: golaps-${{ github.ref_name }}-darwin-arm64
          path: bin/golaps-${{ github.ref_name }}-darwin-arm64

  publish:
    name: Publish Releases
    runs-on: ubuntu-latest

    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download artifacts - Windows
        uses: actions/download-artifact@v2
        with:
          name: golaps-${{ github.ref_name }}-windows-amd64
      
      - name: Download artifacts - Linux
        uses: actions/download-artifact@v2
        with:
          name: golaps-${{ github.ref_name }}-linux-amd64

      - name: Download artifacts - MacOS
        uses: actions/download-artifact@v2
        with:
          name: golaps-${{ github.ref_name }}-darwin-arm64

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset - Linux
        id: upload-release-asset-linux
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./golaps-${{ github.ref_name }}-linux-amd64
          asset_name: golaps-${{ github.ref_name }}-linux-amd64
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      
      - name: Upload Release Asset - Windows
        id: upload-release-asset-windows
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./golaps-${{ github.ref_name }}-windows-amd64
          asset_name: golaps-${{ github.ref_name }}-windows-amd64.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset - MacOS
        id: upload-release-asset-macos
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./golaps-${{ github.ref_name }}-darwin-arm64
          asset_name: golaps-${{ github.ref_name }}-darwin-arm64
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

